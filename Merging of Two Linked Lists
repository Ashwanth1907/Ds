#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

struct Node* head1 = NULL;
struct Node* head2 = NULL;

void insert(struct Node** head, int val) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = val;
    newNode->next = NULL;

    if (*head == NULL) {
        *head = newNode;
    } else {
        struct Node* temp = *head;
        while (temp->next != NULL)
            temp = temp->next;
        temp->next = newNode;
    }
}

struct Node* merge(struct Node* h1, struct Node* h2) {
    if (h1 == NULL) return h2;
    if (h2 == NULL) return h1;

    struct Node* temp = h1;
    while (temp->next != NULL)
        temp = temp->next;
    temp->next = h2;
    return h1;
}

void display(struct Node* head) {
    while (head != NULL) {
        printf("%d -> ", head->data);
        head = head->next;
    }
    printf("NULL\n");
}

int main() {
    insert(&head1, 1);
    insert(&head1, 2);
    insert(&head1, 3);

    insert(&head2, 4);
    insert(&head2, 5);
    insert(&head2, 6);

    printf("First List: ");
    display(head1);
    printf("Second List: ");
    display(head2);

    struct Node* merged = merge(head1, head2);
    printf("Merged List: ");
    display(merged);

    return 0;
}
