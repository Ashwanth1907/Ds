#include <stdio.h>

#define MAX 30

int parent[MAX];

int find(int i) {
    while (parent[i] != i)
        i = parent[i];
    return i;
}

void union_set(int i, int j) {
    int a = find(i);
    int b = find(j);
    parent[a] = b;
}

int main() {
    int n, cost[MAX][MAX], edges = 0;
    int min, u, v, total = 0;

    printf("Enter number of vertices: ");
    scanf("%d", &n);

    printf("Enter adjacency matrix (0 for no edge):\n");
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++) {
            scanf("%d", &cost[i][j]);
            if (cost[i][j] == 0) cost[i][j] = 9999;
        }

    for (int i = 0; i < n; i++)
        parent[i] = i;

    printf("Edges in MST:\n");
    while (edges < n - 1) {
        min = 9999;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (find(i) != find(j) && cost[i][j] < min) {
                    min = cost[i][j];
                    u = i;
                    v = j;
                }
            }
        }
        union_set(u, v);
        printf("%d - %d : %d\n", u, v, min);
        total += min;
        edges++;
    }
    printf("Total cost of MST: %d\n", total);

    return 0;
}
